# 项目相关配置
louyi:
  # 名称
  name: LouYi
  # 版本
  version: 0.0.1-SNAPSHOT
  # 版权年份
  copyrightYear: 2018
  # 文件上传路径
  profile: /tmp/louyi/profile/
  # 获取ip地址开关
  addressEnabled: true

server:
  #服务端口
  port: 8089
  servlet:
    #项目contextPath
    context-path: /

# 日志配置
logging:
  level:
    net.fisher: debug
    org.springframework: WARN
    org.spring.springboot.dao: debug

# 用户配置
user:
  password:
    # 密码错误{maxRetryCount}次锁定10分钟
    maxRetryCount: 5

#Spring配置
spring:
  # 模板引擎
  thymeleaf:
    mode: HTML
    encoding: utf-8
    # 禁用缓存
    cache: false
  # 资源信息
  messages:
    # 国际化资源文件路径
    basename: i18n/messages
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
  # 文件上传
  servlet:
     multipart:
       max-file-size:  30MB
       max-request-size:  30MB
  # 服务模块
  devtools:
    restart:
      # 热部署开关
      enabled: true  
  
  datasource:
    druid: 
#      url: jdbc:mysql://localhost:3306/louyi-fast?useUnicode=true&characterEncoding=utf-8&useSSL=false
#      username: root
#      password: 
#      driver-class-name: com.mysql.jdbc.Driver
#      platform: mysql
      type: com.alibaba.druid.pool.DruidDataSource
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      # druid 配置: https://github.com/alibaba/druid/wiki/
      initialSize: 1
      minIdle: 1
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      validationQuery: select 1
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，stat用于监控界面，'wall'用于防火墙防御sql注入, slf4j用于druid记录sql日志
      filters: stat,slf4j,wall
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: false

  # 设置使用哪个环境的配置
  # 默认的profile为dev，其他环境通过指定启动参数使用不同的profile，比如：
  #   测试环境：java -jar bootshiro.jar --spring.profiles.active=test
  #   生产环境：java -jar bootshiro.jar --spring.profiles.active=prod
  profiles:
    active: dev

mybatis:
  # 指向实体类包路径
  type-aliases-package: net.fisher.project
  # mapper xml 文件地址
  mapper-locations: classpath:mybatis/**/*Mapper.xml
  # 加载全局的配置文件
  configLocation: classpath:mybatis/mybatis-config.xml

#pagehelper分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql

#jasypt:
#  encryptor:
#    password: LC!xfBgz0R7rMXg1vgT2sO8rGqCQJX

# Shiro
shiro:
  user:
    # 登录地址
    loginUrl: /login
    # 权限认证失败地址
    unauthorizedUrl: /unauth
    # 首页地址
    indexUrl: /index
    # 验证码开关
    captchaEnabled: true
    # 验证码类型 math 数组计算 char 字符
    captchaType: math
  cookie:
    # 设置Cookie的域名 默认空，即当前访问的域名
    domain: 
    # 设置cookie的有效访问路径
    path: /
    # 设置HttpOnly属性
    httpOnly: true
    # 设置Cookie的过期时间，天为单位
    maxAge: 30
  session:
    # Session超时时间（默认30分钟）
    expireTime: 30
    # 同步session到数据库的周期（默认1分钟）
    dbSyncPeriod: 1
    # 相隔多久检查一次session的有效性，默认就是10分钟
    validationInterval: 10

# 防止XSS攻击
xss: 
  # 过滤开关
  enabled: true
  # 排除链接（多个用逗号分隔）
  excludes: /system/notice/*
  # 匹配链接
  urlPatterns: /system/*,/monitor/*,/tool/*

# 代码生成
gen: 
  # 作者
  author: fisher
  # 默认生成包路径 system 需改成自己的模块名称 如 system monitor tool
  packageName: net.fisher.project.system
  # 自动去除表前缀，默认是true
  autoRemovePre: true
  # 表前缀(类名不会包含表前缀)
  tablePrefix: sys_

---
# 开发环境配置(配置项只包括环境不同项)
spring:
    profiles: dev
    datasource:
      druid: 
        master: 
          url: jdbc:mysql://127.0.0.1:3306/ry?useUnicode=true&characterEncoding=utf-8&useSSL=false
          username: root
          #password: ENC(S5ZxnKJJr2k8CtAJCh4dKyKVKkAtMcqG)
          password: xiaoxiao
          driverClassName: com.mysql.jdbc.Driver
        slave: 
          # 从数据库开关/默认关闭
          enabled: true
          url: jdbc:sqlserver://61.152.122.117:1433;databasename=ScreenData80JD
          driverClassName: com.microsoft.sqlserver.jdbc.SQLServerDriver
          username: sa
          password: JdQxJ123
    redis:
      # 服务器IP地址
      host: 127.0.0.1
      # 连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password: 
    wechat:
      # 公众测试平台
      appID: wxf3d8985e96e0af37
      appsecret: 2690e82fe3c07f63d2ae1baf0c085b89
      # 蝼蚁
      #appID: wx87d8b9913403cdaa
      #appsecret: e947a8f7f363ada841a54be2d2cf7210
      base_url: 
      wechat_token: louyi_wechat!1357$

---
# 测试环境配置(配置项只包括不同项)

spring:
    profiles: test
    datasource:
      url: jdbc:mysql://127.0.0.1:3306/louyi_fast?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: root
      password: ENC(X118nhUgaLMJ7niJyBao5E35QYgQaq3o)
    redis:
      # 服务器IP地址
      host: 127.0.0.1
      # 连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password:

---
# 生产环境配置(配置项只包括不同项)

spring:
    profiles: prod
    datasource:
      url: jdbc:mysql://192.168.0.3:3306/louyi_fast?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: root
      password: ENC(vp7cbF0sE/lRsThrcwdiA/WoeG1mIXzy)
    redis:
      # 服务器IP地址
      host: 127.0.0.1
      # 连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password:
      
